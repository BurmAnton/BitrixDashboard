# Generated by Django 4.2.19 on 2025-09-16 09:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('crm_connector', '0010_add_status_models_and_stage_rules'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bitrix_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=255)),
                ('head', models.CharField(blank=True, max_length=10, null=True)),
                ('child', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Компанию',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.AddField(
            model_name='atlasapplication',
            name='education_progress',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Прогресс'),
        ),
        migrations.AddField(
            model_name='atlasapplication',
            name='last_active',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Последняя активность'),
        ),
        migrations.AddField(
            model_name='atlasapplication',
            name='potok',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Поток'),
        ),
        migrations.AddField(
            model_name='atlasapplication',
            name='program',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Программа обучения'),
        ),
        migrations.AddField(
            model_name='deal',
            name='program',
            field=models.CharField(blank=True, choices=[('329', 'Основы искусственного интеллекта'), ('2661', 'Инструменты искусственного интеллекта в педагогике'), ('327', 'Специалист по эксплуатации беспилотных летательных аппаратов'), ('319', 'Графический дизайнер'), ('331', 'Бухгалтер'), ('317', 'Специалист по информационным системам и программированию'), ('519', 'Оператор беспилотных авиационных систем'), ('2311', 'Оператор беспилотных авиационных систем (ЦОПП)'), ('321', 'Специалист по эксплуатации токарного и фрезерного оборудования'), ('323', 'Мастер слесарно-электромонтажных работ'), ('325', 'Специалист по эксплуатации станков с программным управлением'), ('2293', 'Специалист по борьбе с беспилотными летательными аппаратами и защите объектов (РЭБ)'), ('2299', 'Специалист по информационным системам в области искусственного интеллекта'), ('2305', 'Инструктор по обучению операторов (внешних пилотов) беспилотных воздушных судов с максимальной взлетной массой 30 кг и менее.'), ('2319', 'Повар'), ('2321', 'Актуальные вопросы организации воспитательной деятельности в системе среднего профессионального образования'), ('2669', 'БПЛА'), ('2671', 'РЭБ 72'), ('2673', 'Специалист по эксплуатации беспилотных авиационных систем в сфере лесного хозяйства'), ('2675', 'ОБПЛА (Оператор беспилотных авиационных систем (с максимальной взлетной массой 30 килограммов и менее))'), ('2677', 'РЭБ 144'), ('2679', 'ИИ в культуре')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='deal',
            name='region',
            field=models.CharField(blank=True, choices=[('969', 'Амурская область'), ('971', 'Архангельская область'), ('973', 'Астраханская область'), ('975', 'Белгородская область'), ('977', 'Брянская область'), ('979', 'Владимирская область'), ('981', 'Волгоградская область'), ('983', 'Вологодская область'), ('985', 'Воронежская область'), ('987', 'Донецкая Народная Республика'), ('989', 'Еврейская автономная область'), ('991', 'Забайкальский край'), ('993', 'Запорожская область'), ('995', 'Ивановская область'), ('997', 'Иркутская область'), ('999', 'Кабардино-Балкарская Республика'), ('1001', 'Калининградская область'), ('1003', 'Калужская область'), ('1005', 'Камчатский край'), ('1007', 'Карачаево-Черкесская Республика'), ('1009', 'Кемеровская область'), ('1011', 'Кировская область'), ('1013', 'Костромская область'), ('1015', 'Краснодарский край'), ('1017', 'Красноярский край'), ('1019', 'Крым'), ('1021', 'Курганская область'), ('1023', 'Курская область'), ('1025', 'Ленинградская область'), ('1027', 'Липецкая область'), ('1029', 'Луганская Народная Республика'), ('1031', 'Магаданская область'), ('1033', 'город Москва'), ('1035', 'Московская область'), ('1037', 'Мурманская область'), ('1039', 'Ненецкий автономный округ'), ('1041', 'Нижегородская область'), ('1043', 'Новгородская область'), ('1045', 'Новосибирская область'), ('1047', 'Омская область'), ('1049', 'Оренбургская область'), ('1051', 'Орловская область'), ('1053', 'Пензенская область'), ('1055', 'Пермский край'), ('1057', 'Приморский край'), ('1059', 'Псковская область'), ('1061', 'Республика Адыгея'), ('1063', 'Республика Алтай'), ('1065', 'Республика Башкортостан'), ('1067', 'Республика Бурятия'), ('1069', 'Республика Дагестан'), ('1071', 'Республика Ингушетия'), ('1073', 'Республика Калмыкия'), ('1075', 'Республика Карелия'), ('1077', 'Республика Коми'), ('1079', 'Республика Марий Эл'), ('1081', 'Республика Мордовия'), ('1083', 'Республика Саха (Якутия)'), ('1085', 'Республика Северная Осетия — Алания'), ('1087', 'Республика Татарстан'), ('1089', 'Республика Тыва'), ('1091', 'Республика Хакасия'), ('1093', 'Ростовская область'), ('1095', 'Рязанская область'), ('1097', 'Самарская область'), ('1099', 'город Санкт-Петербург'), ('1101', 'Саратовская область'), ('1103', 'Сахалинская область'), ('1105', 'Свердловская область'), ('1107', 'Севастополь'), ('1109', 'Смоленская область'), ('1111', 'Ставропольский край'), ('1113', 'Тамбовская область'), ('1115', 'Тверская область'), ('1117', 'Томская область'), ('1119', 'Тульская область'), ('1121', 'Тюменская область'), ('1123', 'Удмуртская Республика'), ('1125', 'Ульяновская область'), ('1127', 'Хабаровский край'), ('1129', 'Ханты-Мансийский автономный округ — Югра'), ('1131', 'Херсонская область'), ('1133', 'Челябинская область'), ('1135', 'Чеченская Республика'), ('1137', 'Чувашская Республика - Чувашия'), ('1139', 'Чукотский автономный округ'), ('1141', 'Ямало-Ненецкий автономный округ'), ('1143', 'Ярославская область')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='historicalatlasapplication',
            name='education_progress',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Прогресс'),
        ),
        migrations.AddField(
            model_name='historicalatlasapplication',
            name='last_active',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Последняя активность'),
        ),
        migrations.AddField(
            model_name='historicalatlasapplication',
            name='potok',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Поток'),
        ),
        migrations.AddField(
            model_name='historicalatlasapplication',
            name='program',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Программа обучения'),
        ),
        migrations.AddField(
            model_name='historicaldeal',
            name='program',
            field=models.CharField(blank=True, choices=[('329', 'Основы искусственного интеллекта'), ('2661', 'Инструменты искусственного интеллекта в педагогике'), ('327', 'Специалист по эксплуатации беспилотных летательных аппаратов'), ('319', 'Графический дизайнер'), ('331', 'Бухгалтер'), ('317', 'Специалист по информационным системам и программированию'), ('519', 'Оператор беспилотных авиационных систем'), ('2311', 'Оператор беспилотных авиационных систем (ЦОПП)'), ('321', 'Специалист по эксплуатации токарного и фрезерного оборудования'), ('323', 'Мастер слесарно-электромонтажных работ'), ('325', 'Специалист по эксплуатации станков с программным управлением'), ('2293', 'Специалист по борьбе с беспилотными летательными аппаратами и защите объектов (РЭБ)'), ('2299', 'Специалист по информационным системам в области искусственного интеллекта'), ('2305', 'Инструктор по обучению операторов (внешних пилотов) беспилотных воздушных судов с максимальной взлетной массой 30 кг и менее.'), ('2319', 'Повар'), ('2321', 'Актуальные вопросы организации воспитательной деятельности в системе среднего профессионального образования'), ('2669', 'БПЛА'), ('2671', 'РЭБ 72'), ('2673', 'Специалист по эксплуатации беспилотных авиационных систем в сфере лесного хозяйства'), ('2675', 'ОБПЛА (Оператор беспилотных авиационных систем (с максимальной взлетной массой 30 килограммов и менее))'), ('2677', 'РЭБ 144'), ('2679', 'ИИ в культуре')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='historicaldeal',
            name='region',
            field=models.CharField(blank=True, choices=[('969', 'Амурская область'), ('971', 'Архангельская область'), ('973', 'Астраханская область'), ('975', 'Белгородская область'), ('977', 'Брянская область'), ('979', 'Владимирская область'), ('981', 'Волгоградская область'), ('983', 'Вологодская область'), ('985', 'Воронежская область'), ('987', 'Донецкая Народная Республика'), ('989', 'Еврейская автономная область'), ('991', 'Забайкальский край'), ('993', 'Запорожская область'), ('995', 'Ивановская область'), ('997', 'Иркутская область'), ('999', 'Кабардино-Балкарская Республика'), ('1001', 'Калининградская область'), ('1003', 'Калужская область'), ('1005', 'Камчатский край'), ('1007', 'Карачаево-Черкесская Республика'), ('1009', 'Кемеровская область'), ('1011', 'Кировская область'), ('1013', 'Костромская область'), ('1015', 'Краснодарский край'), ('1017', 'Красноярский край'), ('1019', 'Крым'), ('1021', 'Курганская область'), ('1023', 'Курская область'), ('1025', 'Ленинградская область'), ('1027', 'Липецкая область'), ('1029', 'Луганская Народная Республика'), ('1031', 'Магаданская область'), ('1033', 'город Москва'), ('1035', 'Московская область'), ('1037', 'Мурманская область'), ('1039', 'Ненецкий автономный округ'), ('1041', 'Нижегородская область'), ('1043', 'Новгородская область'), ('1045', 'Новосибирская область'), ('1047', 'Омская область'), ('1049', 'Оренбургская область'), ('1051', 'Орловская область'), ('1053', 'Пензенская область'), ('1055', 'Пермский край'), ('1057', 'Приморский край'), ('1059', 'Псковская область'), ('1061', 'Республика Адыгея'), ('1063', 'Республика Алтай'), ('1065', 'Республика Башкортостан'), ('1067', 'Республика Бурятия'), ('1069', 'Республика Дагестан'), ('1071', 'Республика Ингушетия'), ('1073', 'Республика Калмыкия'), ('1075', 'Республика Карелия'), ('1077', 'Республика Коми'), ('1079', 'Республика Марий Эл'), ('1081', 'Республика Мордовия'), ('1083', 'Республика Саха (Якутия)'), ('1085', 'Республика Северная Осетия — Алания'), ('1087', 'Республика Татарстан'), ('1089', 'Республика Тыва'), ('1091', 'Республика Хакасия'), ('1093', 'Ростовская область'), ('1095', 'Рязанская область'), ('1097', 'Самарская область'), ('1099', 'город Санкт-Петербург'), ('1101', 'Саратовская область'), ('1103', 'Сахалинская область'), ('1105', 'Свердловская область'), ('1107', 'Севастополь'), ('1109', 'Смоленская область'), ('1111', 'Ставропольский край'), ('1113', 'Тамбовская область'), ('1115', 'Тверская область'), ('1117', 'Томская область'), ('1119', 'Тульская область'), ('1121', 'Тюменская область'), ('1123', 'Удмуртская Республика'), ('1125', 'Ульяновская область'), ('1127', 'Хабаровский край'), ('1129', 'Ханты-Мансийский автономный округ — Югра'), ('1131', 'Херсонская область'), ('1133', 'Челябинская область'), ('1135', 'Чеченская Республика'), ('1137', 'Чувашская Республика - Чувашия'), ('1139', 'Чукотский автономный округ'), ('1141', 'Ямало-Ненецкий автономный округ'), ('1143', 'Ярославская область')], max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='deal',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='crm_connector.company'),
        ),
        migrations.AddField(
            model_name='historicaldeal',
            name='company',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='crm_connector.company'),
        ),
    ]
